- name: Configuring {{component}} Repository
  ansible.builtin.copy:
    src: mongo.repo                                           # Location of the file on the machine where you're running this cript
    dest: /etc/yum.repos.d/mongodb.repo                       # Location of the file where you want to copy this to remote server.

- name: Installing {{component}} package
  ansible.builtin.package:
    name: mongodb-org 
    state: present 

- name: Enabling {{component}} visibility
  ansible.builtin.replace:
    path: /etc/mongod.conf
    regexp: '127.0.0.1'
    replace: '0.0.0.0'

- name: Starting {{component}} Service
  ansible.builtin.systemd:
    name: mongod 
    state: started
    enabled: yes
    daemon_reload: yes

- name: Download and extracting {{component}} Schema
  ansible.builtin.unarchive:
    src: https://github.com/stans-robot-project/{{component}}/archive/main.zip
    dest: /tmp 
    remote_src: yes   

- name: Injecting Users & Catalogue Schema 
  community.mongodb.mongodb_shell:
    file: "/tmp/mongodb-main/users.js"
    idempotent: yes
  # loop: 
  #   - users
  #   - catalogue

# #Copying the repo from local machine 
# - name: copy the {{component}} file
#   ansible.builtin.copy:
#     src: mongo.repo
#     dest: /etc/yum.repos.d/mongodb.repo
  

# # installing DB
# - name: installing {{component}}
#   ansible.builtin.package:
#     name: mongodb-org
#     state: present 

# - name: Replacing Ip for visibility in {{component}}
#   ansible.builtin.replace:
#     path: /etc/mongod.conf
#     regexp: '127.0.0.1'
#     replace: '0.0.0.0'

# - name: Restarting {{component}}
#   ansible.builtin.systemd:
#     name: mongod
#     state: started
#     enabled: yes
#     daemon_reload: yes

# - name: Unarchive a file that needs to be downloaded (added in 2.0) on {{component}}
#   ansible.builtin.unarchive:
#     src: "https://github.com/stans-robot-project/mongodb/archive/main.zip"
#     dest: /tmp
#     remote_src: yes


# - name: Injecting Users & Catalogue Schema 
#   community.mongodb.mongodb_shell:
#     file: "/tmp/mongodb-main/{{item}}.js"
#     idempotent: yes
#   loop: 
#     - users
#     - catalogue

# # - name: Injecting users schema
# #   community.mongodb.mongodb_shell:
# #     file: "/tmp/mongodb-main/users.js"
# #     idempotent: yes
  
  
# # - name: Injecting catalogue schema
# #   community.mongodb.mongodb_shell:
# #     file: "/tmp/mongodb-main/catalogue.js"
# #     idempotent: yes